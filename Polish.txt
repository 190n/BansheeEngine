

There's still a crash regarding an uninitialized mCachedPtr on a C# class when shutting down. Attempt to find consistent repro steps.

Finish GPUProfiler:
 - Actually implement sampling and report generation
 - Add timer and occlusion queries
 - Resource writes/reads/creation/destruction is not currently increased in RenderStats

 ---------------------------

 Make hierarchical documentation. Organize stuff based on type. Once I actually generate the documentation add Doxygen grouping tags (or whatever they're called)

 ---------------------------

 Fullscreen stuff:

I should be able to specify resolution when going to windowed mode
 - Maybe just store the windowed and fullscreen resolutions separately and restore automatically?
 - I have a feeling DX9 might start crashing once I resize to sub-fullscreen res and go back to FS - test it

 Add VSync toggle to RenderWindow if it doesn't already exist.
 Test creating a fullscreen window on window creation.

DISREGARD MONITOR INDEX ON DX9
 - It's not trivial and its not worth wasting time on a deprecated system
 - Seems I would need to destroy the device and then recreate it using the new adapter index

 -----------------------------

 Refactor:
 - Make CmApplication a base of BsApplication
 - If I merge CmApp and BsApp consider refactoring CmApplication::mainLoopCallback

Consider renaming Profiler to CPUProfiler and CPUProfiler to something else. Since now I have GPUProfiler it's confusing to have one named just Profiler.
Profiler can only be called from sim/core thread which is also a bit weird.

Find and rename any other CM_ defines

Rename CamelotOIS external library