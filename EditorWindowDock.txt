DockManager implementation plan:
 - DockManager main class
   - When empty make sure it has a GUIElement that covers its entire space so it can catch and drop events. Will likely need a special transparent GUIElement?
   - Has a reference to one DockContainer, which is initially empty
      - DockContainer can have two DockContainer children, or one EditorWidgetContainer child (maybe make a container base class? - optional)
	  - DockContainer should probably contain a GUIElement which can receieve events
	     - This would mean extending GUIManager so it can send events to top level elements, and if they don't process them, send them one level lower?
	  - Resizing a DockContainer resizes all child DockContainers recursively (and EditorWidgetContainers)
	  - If DockContainer has DockContainer children then it also contains a  GUIElement resizer (just an empty space, in the direction of the split)
	    - Moving the element allows you to resize the two child DockContainers
 - When last element is removed from EditorWidgetContainer make sure to notify the parent
 - Make main render window frameless
   - Implement MainEditorWindow from EditorWindowBase
   - Make sure MainEditorWindow holds a DockManager reference and resizes it with the window

DockContainer biggest issues:
 - How do I draw the drag and drop overlay??
 - How do I detect mouse input yet still let it through to child widget

FIRST CREATE DOCK CONTAINER WITHOUT DRAG AND DROP SUPPORT

Make sure to test everything thoroughly - right now I have tested very little
Drag and drop manager currently ignores the provided icon, but it should use it as a cursor

Prevent docking if available size is less than 20 pixels, otherwise there might be some weirdness

GUIViewport:
 - MAJOR TODO - Don't forget to update GUIViewport is to also gets updated when only mesh is dirty!
 - In DX11 it is not possible to clear just a sub-region of a render target

------------------------

Other things to remember:
 - Possibly add a way to have hidden widgets in the EditorWidgetContainer (like side-bars that pop on mouse over in Visual Studio)
 - A way to persist window states
 - Also a way to reset all widgets to original locations