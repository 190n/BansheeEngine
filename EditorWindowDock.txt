Add icons to drag and drop - There's a built-in windows icon for this. I think. Although solution that accepts custom cursors is probably better longterm. (Special class BuiltinCursors?)

end drag doesn't get called unless mouse is released over a window
 - Capture mouse on start drag (SetCapture, and release with ReleaseCapture)
 - End drag should be handled by GUIManager, but if it doesn't process it DragAndDrop manager should check if mouse was released, and
   release capture and activate end drag callback

Add highlight to WindowMover so I can know when I'm mousing over it with a dragged window in hand

Reopening the window I can see the update takes a few frames. This shouldn't be the case.

Drag and drop manager currently ignores the provided icon, but it should use it as a cursor

Prevent docking if available size is less than 20 pixels, otherwise there might be some weirdness

GUIViewport:
 - MAJOR TODO - GUIViewport updateRenderElementsInternal only gets called when contents change, but viewport should update even if 
    only its offset changes (normally that just marks the mesh as modified, which doesn't result in a call to updateRenderElementsInternal)
	- UPDATE: I don't use GUIViewport anymore

------------------------

Get rid of resize hacks:
 - 	In CmWin32Window (and probably same for DX9 and DX11)
	// HACK: During the move/resize modal loop no mouse messages will be posted, which means we will
	// never receive a "mouse up" event, even though user had to release the mouse to stop the loop. But our GUI system
	// relies on mouse down being followed by mouse up otherwise things end start to break a bit. So here we simulate 
	// the mouse release. 
	// Note: This is possible because SendMessage won't return until user releases the mouse and modal loop is done.
	void HACK_SendLMBUpEvent()
	{
		gInput().simulateButtonUp(BC_MOUSE_LEFT);
	}
 - Hack from GUIManager (related to resize and mouse up event)

Also try to get rid of start/end move/resize

Calling Set/Release capture on sim thread probably wont work. Create custom, and send messages instead
Add Platform::onMouseCaptureLost


------------------------

Other things to remember:
 - Possibly add a way to have hidden widgets in the EditorWidgetContainer (like side-bars that pop on mouse over in Visual Studio)
 - A way to persist window states
 - Also a way to reset all widgets to original locations