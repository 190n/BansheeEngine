 - Render system threading:
   - Make a list of thread-safe RenderSystem classes
    - For example HighLevelGpuProgram is thread safe but GpuProgram itself isn't
    - Classes that are safe to use outside of the render thread: RenderSystem, Mesh, Texture, HighLevelGpuProgram, Material, Shader, Technique
	- Classes that are only accessible from the render thread: GpuProgram, HardwarePixelBuffer, HardwareVertexBuffer, HardwareIndexBuffer
  - Make sure the user knows resources are shared between contexts. All resource updates are executed 
     before rendering a frame, so whichever context updated the resource last, was the version that will be used.
  - HLSL11 limitations
     - packoffset on parameters is not supported and will likely result in invalid constant buffer size and/or element offsets
  - GLSL limitations
     - layout(row_major) is not supported and will likely result in incorrect matrices
	 - Only std140 packing method is supported, others will likely result in invalid constant buffer size and/or element offsets
  - Texture limitations: Only 1D, 2D, 3D and Cube textures (and their samplers) are supported. Support for multisampled textures
     is included where necessary to implement render targets. Support for texture arrays and is not included.